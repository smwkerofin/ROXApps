#!/usr/bin/env python

import os, sys

import findrox; findrox.version(2, 0, 2)
import rox, rox.options, rox.applet, rox.Menu, rox.InfoWin

import dclient

class Monitor(rox.applet.Applet):
    def __init__(self, xid):
        rox.applet.Applet.__init__(self, xid)

        self.server=dclient.connect(True)

        ebox=rox.g.EventBox()
        self.add(ebox)

        vbox=rox.g.VBox()
        ebox.add(vbox)

        icon=rox.g.Image()
        icon.set_from_file(os.path.join(rox.app_dir, '.DirIcon'))
        vbox.pack_start(icon, False, False, 2)
            
        self.alabel=rox.g.Label('0:0')
        vbox.pack_start(self.alabel, False, False, 2)

        self.show_all()

        rox.Menu.set_save_name('DownloadManager')
        self.applet_menu=rox.Menu.Menu('applet', [
            rox.Menu.Action('/Info', 'show_info',
                            stock=rox.g.STOCK_DIALOG_INFO),
            rox.Menu.Separator(),
            rox.Menu.Action('/Options', 'show_options',
                            stock=rox.g.STOCK_PREFERENCES),
            rox.Menu.Separator(),
            rox.Menu.Action('/Show window', 'show_window'),
            rox.Menu.Action('/Hide window', 'hide_window'),
            rox.Menu.Separator(),
            rox.Menu.Action('/Quit', 'do_quit',
                            stock=rox.g.STOCK_QUIT)
            ])

        self.applet_menu.attach(self, self)
        
        ebox.add_events(rox.g.gdk.BUTTON_PRESS_MASK)
        ebox.connect("button_press_event", self.click)

        rox.g.timeout_add(2000, self.update)
        
    def show_info(self):
        rox.InfoWin.infowin('DownloadManager')

    def show_window(self, *unused):
        self.server.showWindow(True)

    def hide_window(self):
        self.server.showWindow(False)

    def show_options(self, *unused):
        self.server.showOptions()

    def do_quit(self):
        self.hide()
        #self.hide_window()
        self.destroy()

    def update(self, *unused):
        if self.server.ping():
            try:
                active=self.server.getActive()
                waiting=self.server.getWaiting()

                #print >>sys.stderr, active 
                #print >>sys.stderr, waiting 
                self.alabel.set_label('%d:%d' % (active, waiting))
            except:
                self.alabel.set_label('?:?')

        else:
            self.alabel.set_label('-:-')

        return True

    def click(self, widget, event, data=None):
        if event.button==1:
            self.show_window()
            return True

        elif event.button==3:
            self.applet_menu.popup(self, event, self.position_menu)
            return True

        return False

if __name__=='__main__':
    try:
        applet=Monitor(sys.argv[1])
        rox.mainloop()
    except:
        rox.report_exception()

# We may have started the DownloadManager and it may have exited, so
# try and reap it.
try:
    while True:
        os.waitpid(0, os.WNOHANG)
except:
    pass
