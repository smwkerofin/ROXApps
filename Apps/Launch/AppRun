#!/usr/bin/env python
#
# $Id: AppRun,v 1.6 2005/05/07 11:27:28 stephen Exp $

import os, sys
import urlparse

import findrox; findrox.version(2, 0, 2)
import rox
import rox.options
import rox.OptionsBox
import rox.filer

__builtins__._ = rox.i18n.translation(os.path.join(rox.app_dir, 'Messages'))

from xml.dom import Node, minidom

def data(node):
	"""Return all the text directly inside this DOM Node."""
	return ''.join([text.nodeValue for text in node.childNodes
			if text.nodeType == Node.TEXT_NODE])

options=rox.options.OptionGroup('Launch', 'Options.xml')
rox.app_options=options
#print options.pending

BROWSER=os.getenv('BROWSER')
if BROWSER:
	if '%s' in BROWSER:
		web_cmd=BROWSER
	else:
		web_cmd=BROWSER+' %s'
else:
	web_cmd='mozilla -remote "openURL(%s,new-window)"'

http_cmd=rox.options.Option('http', web_cmd, options)

schemes=rox.options.ListOption('schemes', ('http=%s' % web_cmd,), options)

#print 'pre notify',schemes, schemes.default_value, type(schemes.default_value)
options.notify()
#print 'post notify',schemes, schemes.default_value

def install_button_handler(*args):
    import rox.mime_handler
    try:
        rox.mime_handler.install_from_appinfo()
    except:
        rox.report_exception()

def build_install_button(box, node, label):
    #print box, node, label
    button = rox.g.Button(label)
    box.may_add_tip(button, node)
    button.connect('clicked', install_button_handler)
    return [button]
rox.OptionsBox.widget_registry['install-button'] = build_install_button



def uri_from_file(fl):
    for line in fl.readlines():
        l=line.strip()
        if not l or l[0]=='#':
            continue
        if l[:4]=='URL=':
            return l[4:].strip()
        return l

def launch_uri(uri):
    scheme, location, path, query, fragment=urlparse.urlsplit(uri, 'file')
    #print scheme, location, path, query, fragment

    if scheme=='file':
        rox.filer.spawn_rox((path,))
        return

    cscheme=scheme.lower()
    if cscheme=='https':
        cscheme='http'

    cmd=''
    if schemes.list_value!=None:
        for v in schemes.list_value:
            var, val=v.split('=', 1)
            if var==cscheme:
                cmd=val
                break
            
    if not cmd:
        cmd=http_cmd.value
    if not cmd:
        cmd=web_cmd

    scmd=cmd % uri
    #print cmd
    #print uri
    #print scmd
    os.spawnv(os.P_NOWAIT, '/bin/sh', ('sh', '-c', scmd))

def run_options():
    rox.edit_options()
    rox.mainloop()
    #print schemes

def run_file(fl):
    uri=uri_from_file(fl)
    #print 'uri from %s is %s' % (fl, uri)
    if not uri:
        rox.alert(_('No URI found in %s') % fl.name)
        return
    launch_uri(uri)

if __name__=='__main__':
    if len(sys.argv)>1:
        if sys.argv[1][0]=='/':
            run_file(file(sys.argv[1], 'r'))
        elif sys.argv[1]=='-o':
            run_options()
        elif sys.argv[1]=='-':
            run_file(sys.stdin)
        else:
            launch_uri(sys.argv[1])
    else:
        run_options()
        
